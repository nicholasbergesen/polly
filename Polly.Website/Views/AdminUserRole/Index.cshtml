@model IEnumerable<Polly.Website.Models.AdminUserRoleView>

@{
    ViewBag.Title = "Index";
}

<div class="container pt-4">
    <h3>Stats</h3>
    <hr />
    <div class="row">
        <ul>
            <li>Machine: @Environment.MachineName</li>
            <li>OS: @Environment.OSVersion.VersionString</li>
            <li>Memory: @(GC.GetTotalMemory(false) / 1024 / 1024) MBytes</li>
        </ul>
    </div>
    <h3>Top 10 Cache</h3>
    <hr />
    <div class="row">
        <ul>
            <li>Last Populated: @TopTenCache.LastPopulated.GetValueOrDefault()</li>
            <li>Item Count: @TopTenCache.Products.Count</li>
            <li>Repopulated: @TopTenCache.RepopulatedCount</li>
            <li>Failed to populated: @TopTenCache.FailedPopulateAttempts</li>
        </ul>
    </div>
    <div class="row">
        <button class="btn btn-primary" onclick="getCacheItems()">Reload Cache</button>
    </div>
    <br />
    <h3>Users</h3>
    <hr />
    <div class="row">
        <p>
            @Html.ActionLink("Create User", "Create") |
            @Html.ActionLink("Create Role", "Index", "ApplicationRolesController")
        </p>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsEnabled)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmailConfirmed)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Roles)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsEnabled)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmailConfirmed)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Roles)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }

        </table>
    </div>
</div>

<script>
    function getCacheItems() {
        $.ajax({
            url: "https://api.takealot.com/rest/v-1-9-0/promotions?is_bundle_included=True",
            method: "GET"
        })
        .done(function (result) {
            var promotionJson = result.response;
            let promotions = [];

            for (var i = 0; i < promotionJson.length; i++) {
                if (promotionJson[i].display_name == "Daily Deals") {
                    var promotionsId = promotionJson[i].promotion_id;

                    $.when(getproductLine(0, promotionsId, promotions),
                        getproductLine(200, promotionsId, promotions),
                        getproductLine(400, promotionsId, promotions))
                        .done(function () {
                            let concatresults = promotions[0].concat(promotions[1]).concat(promotions[2]);
                            postData(concatresults);
                        });
                    break;
                }
            }
        });
    }

    function getproductLine(start, promotionsId, promotions) {
        return $.ajax({
            url: "https://api.takealot.com/rest/v-1-9-0/productlines/search?sort=BestSelling%20Descending&rows=200&daily_deals_rows=200&start=" + start + "&detail=listing&filter=Available:true&filter=Promotions:" + promotionsId,
            type: 'GET',
            timeout: 30000,
            error: function (msg) {
                console.log(msg);
            },
            success: function (data) {
                promotions.push(data.results.productlines);
            }
        });
    }

    function postData(promotions) {
        var send = JSON.stringify(promotions);
        console.log(send);
        console.log(promotions);
        $.ajax({
            url: '/api/products/cache',
            method: "post",
            data: send,
            dataType: "json",
            contentType: "application/json"
        });
    }
</script>
